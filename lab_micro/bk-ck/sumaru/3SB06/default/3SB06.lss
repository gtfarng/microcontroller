
3SB06.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  000000dc  00000150  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000dc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .debug_aranges 00000020  00000000  00000000  00000160  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 0000001b  00000000  00000000  00000180  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000000b8  00000000  00000000  0000019b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000007c  00000000  00000000  00000253  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000008c  00000000  00000000  000002cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  0000035c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000007e  00000000  00000000  0000037c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000013  00000000  00000000  000003fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ed       	ldi	r30, 0xDC	; 220
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>
  8a:	0e 94 4b 00 	call	0x96	; 0x96 <main>
  8e:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <main>:
#include<avr/io.h>
int main(void)
{
  96:	df 93       	push	r29
  98:	cf 93       	push	r28
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	60 97       	sbiw	r28, 0x10	; 16
  a0:	0f b6       	in	r0, 0x3f	; 63
  a2:	f8 94       	cli
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	0f be       	out	0x3f, r0	; 63
  a8:	cd bf       	out	0x3d, r28	; 61
    DDRC=0x00;
  aa:	17 b8       	out	0x07, r1	; 7
	DDRB=0xFF;
  ac:	8f ef       	ldi	r24, 0xFF	; 255
  ae:	84 b9       	out	0x04, r24	; 4
								0b01110111,
								0b01111100,
								0b00111001, 
								0b01011110,
								0b01111001, 
								0b01110001};
  b0:	de 01       	movw	r26, r28
  b2:	11 96       	adiw	r26, 0x01	; 1
  b4:	e0 e0       	ldi	r30, 0x00	; 0
  b6:	f1 e0       	ldi	r31, 0x01	; 1
  b8:	80 e1       	ldi	r24, 0x10	; 16
  ba:	01 90       	ld	r0, Z+
  bc:	0d 92       	st	X+, r0
  be:	81 50       	subi	r24, 0x01	; 1
  c0:	e1 f7       	brne	.-8      	; 0xba <main+0x24>
	while(1)
	{
	    SWITCH_V = PINC;
		SWITCH_V &=0x0F;
		DISP= LOOKUPTB[SWITCH_V];
  c2:	9e 01       	movw	r18, r28
  c4:	2f 5f       	subi	r18, 0xFF	; 255
  c6:	3f 4f       	sbci	r19, 0xFF	; 255
								0b01011110,
								0b01111001, 
								0b01110001};
	while(1)
	{
	    SWITCH_V = PINC;
  c8:	86 b1       	in	r24, 0x06	; 6
		SWITCH_V &=0x0F;
		DISP= LOOKUPTB[SWITCH_V];
  ca:	8f 70       	andi	r24, 0x0F	; 15
  cc:	f9 01       	movw	r30, r18
  ce:	e8 0f       	add	r30, r24
  d0:	f1 1d       	adc	r31, r1
  d2:	80 81       	ld	r24, Z
		PORTB = DISP;
  d4:	85 b9       	out	0x05, r24	; 5
  d6:	f8 cf       	rjmp	.-16     	; 0xc8 <main+0x32>

000000d8 <_exit>:
  d8:	f8 94       	cli

000000da <__stop_program>:
  da:	ff cf       	rjmp	.-2      	; 0xda <__stop_program>
